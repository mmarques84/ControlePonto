@model IEnumerable<ControlePontoAM.Models.entidades.cadastrohora>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
@{
    var grid = new WebGrid(Model, canPage: true, rowsPerPage: 10,
    selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
    grid.Pager(WebGridPagerModes.NextPrevious);}
<style type="text/css">
    .edit-mode {
    }

    .edit-user {
    }

        .edit-user display-mode {
        }

    .save-user edit-mode {
    }

    .display-mode {
    }

    .cancel-user {
    }

    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 750px;
        display: table;
        border-collapse: collapse;
        border: solid px #C5C5C5;
        background-color: white;
    }

        .webgrid-table td, th {
            border: 1px solid #C5C5C5;
            padding: 3px 7px 2px;
        }

    .webgrid-header, .webgrid-header a {
        background-color: #0094ff;
        color: #ffffff;
        text-align: left;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: azure;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 65px;
    }

    .col2Width {
        width: 220px;
    }
</style>
<br />
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">
            <h3>Cadastro Ponto</h3>
        </h3>
    </div>

    <div class="panel-body">

        <div id="gridContent" style="font-family: Arial; padding: 20px;">
            @grid.GetHtml(tableStyle: "webgrid-table",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.All,
            columns: grid.Columns(
            grid.Column("ID", format: @<text><span class="display-mode">@item.codigo</span>
            <label id="EmpId" class="edit-mode">@item.codigo</label></text>,
                     style: "col1Width"),
                     grid.Column("Nome", "Nome", format: @<text><span class="display-mode">
                            <label id="lblName">@item.usuario.nome</label>
                        </span>
                        <input type="text" id="Name" value="@item.usuario.nome" class="edit-mode" /></text>, style: "col2Width"),

                             grid.Column("horaEntradaInicio", "horaEntradaInicio", format: @<text> <span class="display-mode">
                                    <label id="lblhoraEntradaInicio">@item.horaEntradaInicio</label>
                                </span>
                                <input type="text" id="horaEntradaInicio" value="@item.horaEntradaInicio" class="edit-mode" />
                            </text>, style: "col2Width"),

                                     grid.Column("horaSaidaInicio", "horaSaidaInicio", format: @<text> <span class="display-mode">
                                            <label id="lblhoraSaidaInicio">@item.horaSaidaInicio</label>
                                        </span>
                                        <input type="text" id="horaSaidaInicio" value="@item.horaSaidaInicio" class="edit-mode" /></text>, style: "col2Width"),

                                             grid.Column("Action", format: @<text>
                                                <button class="btn-sm btn-info edit-user display-mode"> <span class="glyphicon glyphicon-refresh"></span> Alterar</button>

                                                <button class="btn-sm btn-success save-user edit-mode"><span class="glyphicon glyphicon-ok"></span></button>
                                                <button class="btn-sm btn-danger cancel-user edit-mode"><span class="glyphicon glyphicon-remove"></span></button>
                                            </text>, style: "col3Width", canSort: false)
                                                                                     ))
        </div>
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.usuario.nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.horaEntradaInicio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.horaSaidaInicio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.horaEntradaTarde)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.horaSaidaTarde)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.observacao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dataAlteracao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.dia)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.mes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ano)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.usuario.nome)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.horaEntradaInicio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.horaSaidaInicio)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.horaEntradaTarde)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.horaSaidaTarde)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.observacao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dataAlteracao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dia)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.mes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ano)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.codigo }) |
                        @Html.ActionLink("Details", "Details", new { id = item.codigo }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.codigo })
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <!-- bootstrap -->
    <script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
    <!-- chamada da função -->


    <script type="text/javascript">
        $(function () {
            $('.edit-mode').hide();
            $('.edit-user, .cancel-user').on('click', function () {
                var tr = $(this).parents('tr:first');
                tr.find('.edit-mode, .display-mode').toggle();
            });
            $('.save-user').on('click', function () {
                var tr = $(this).parents('tr:first');
                var EmpID = tr.find("#EmpId").html();
                var EmpName = tr.find("#Name").val();
                var EmpDesignation = tr.find("#Designation").val();
                var EmpGender = tr.find("#Gender").val();
                var EmpCity = tr.find("#City").val();
                var EmpState = tr.find("#State").val();
                var EmpZip = tr.find("#Zip").val();

                //Creating Employee JSON object
                var EmployeeModel =
                    {
                        "Id": EmpID,
                        "Name": EmpName,
                        "Designation": EmpDesignation,
                        "Gender": EmpGender,
                        "City": EmpCity,
                        "State": EmpState,
                        "Zip": EmpZip
                    };
                //Posting Employee object to controller's Update action method
                $.ajax({
                    url: '/Employee/Update',
                    data: JSON.stringify(EmployeeModel),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        tr.find('.edit-mode, .display-mode').toggle();
                        alert('Record updated Successfully!!');
                    }
                });
            });

            $('.edit-user').on('click', function () {
                var tr = $(this).parents('tr:first');
                var EmpID = tr.find("#EmpId").html();
                var EmpName = tr.find("#Name").val();
                var EmpDesignation = tr.find("#Designation").val();
                var EmpGender = tr.find("#Gender").val();
                var EmpCity = tr.find("#City").val();
                var EmpState = tr.find("#State").val();
                var EmpZip = tr.find("#Zip").val();

                tr.find("#lblName").text(EmpName);
                tr.find("#lblDesignation").text(EmpDesignation);
                tr.find("#lblGender").text(EmpGender);
                tr.find("#lblCity").text(EmpCity);
                tr.find("#lblState").text(EmpState);
                tr.find("#lblZip").text(EmpZip);
            });
        })
    </script>

}
